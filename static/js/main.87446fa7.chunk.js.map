{"version":3,"sources":["components/AccountBalance/AccountBalance.jsx","components/Coin/Coin.jsx","components/CoinList/CoinList.jsx","snowman.png","components/Header/Header.jsx","App.js","reportWebVitals.js","index.js"],"names":["Section","styled","section","Button","button","BalanceToggleButton","Balance","div","formatter","Intl","NumberFormat","style","currency","AccountBalance","props","buttonText","showBalance","balanceData","format","amount","buttonClass","action","method","onClick","handleBalanceVisability","className","addHelicopterMoney","Td","td","TdControls","TdName","Coin","name","ticker","price","balance","Event","preventDefault","handleRefresh","tickerId","class","handleTransaction","Table","table","CoinList","coinData","map","key","uuidv4","Heady","header","DIVAPP","H1","h1","Logo","img","Small","Header","src","snowman","alt","Component","formatPrice","parseFloat","Number","toFixed","App","useState","setBalance","setShowBalance","setCoinData","componentDidMount","a","axios","get","response","coinIds","data","slice","coin","id","promises","Promise","all","coinPriceData","symbol","quotes","USD","useEffect","length","valueChangedId","tickers","newPriceAmount","newCoinData","newPrice","oldValue","isBuy","balanceChange","values","newValues","oldBalance","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.87446fa7.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styled from 'styled-components';\n\nconst Section = styled.section`\n    text-align: right;\n    font-size: 2rem;\n    margin-bottom: 2rem;\n    margin-right: 10rem;\n    line-height: 3rem;\n    \n    \n`;\n\nconst Button = styled.button`\n   background: black;\n   border-radius: 10px;\n   border: 2px solid darkgrey;\n   color: white;\n   margin: 0 4px;\n   padding: 0.25rem 1rem;\n   height: 55px;\n   \n4\n    `;\n\nconst BalanceToggleButton = styled(Button)`\n        width: 150px;\n        \n    \n    `;\n\n\nconst Balance = styled.div`\n    min-width: 250px;\n    margin: 0.7rem 0 0 35rem; \n    font-size: 2.0em;\n    color: black;\n    \n `;\n\nvar formatter = Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD'\n\n});\n\nexport default function AccountBalance(props) {\n\n\n    const buttonText = props.showBalance ? 'Hide Balance' : 'Show Balance'\n    let balanceData = '\\u00A0';\n    if (props.showBalance) {\n        balanceData = <> {formatter.format(props.amount)}</>\n    }\n    const buttonClass = 'btn ' + (props.showBalance ? 'btn-warning' : 'btn-info');\n    let btnHelicopterMoney = null;\n    return (\n        <>\n            <Balance>{balanceData}</Balance>\n            <Section>\n                <form action=\"#\" method=\"POST\">\n                    <BalanceToggleButton\n                        onClick={props.handleBalanceVisability}\n                        className={buttonClass}>\n                        {buttonText}\n                    </BalanceToggleButton>\n                    <Button className=\"btn btn-primary\"\n                        onClick={props.addHelicopterMoney}>\n                        <i className=\"fas fa-coins\"></i>\n                    </Button>\n                </form>\n            </Section>\n        </>\n    );\n\n}\n\n\nAccountBalance.propTypes = {\n\n    amount: PropTypes.number.isRequired\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Button = styled.button`\n    \n    font-size: 11px;\n    width: 64px;\n    margin: 3px 5px 0;\n    `;\n\nconst Td = styled.td`\n       border: 1px solid #cccccc;\n       width: 20vw; \n       \n    `;\nconst TdControls = styled(Td)`\n        width: 34vw;\n    `;\n\nconst TdName = styled(Td)`\n        width: 19vw;\n    `;\n\nexport default function Coin(props) {\n\n\n    const handleClick = (Event) => {\n        Event.preventDefault();\n\n        props.handleRefresh(props.tickerId);\n    }\n\n    const handleBuy = (Event) => {\n        Event.preventDefault();\n\n        props.handleTransaction(true, props.tickerId);\n    }\n\n    const handleSell = (Event) => {\n        Event.preventDefault();\n\n        props.handleTransaction(false, props.tickerId);\n    }\n    return (\n        <tr>\n            <TdName>{props.name}</TdName>\n            <Td>{props.ticker}</Td>\n            <Td>${props.price}</Td>\n            {props.showBalance ? <Td>{props.balance}</Td> : null}\n            <TdControls>\n                <form action=\"#\" method=\"POST\">\n                    <Button className=\"btn btn-info\" onClick={handleClick}>\n                        <i class=\"fas fa-sync-alt\"></i>\n                    </Button>\n                    <Button className=\"btn btn-warning\" onClick={handleBuy}>BUY</Button>\n                    <Button className=\"btn btn-danger\" onClick={handleSell}>SELL</Button>\n                </form>\n            </TdControls>\n        </tr>\n    );\n}\n//type checking.\nCoin.propTypes = {\n    name: PropTypes.string.isRequired,\n    ticker: PropTypes.string.isRequired,\n    price: PropTypes.number.isRequired,\n    balance: PropTypes.number.isRequired\n}\n\n\n\n","import React from 'react';\nimport styled from 'styled-components';\nimport Coin from '../Coin/Coin.jsx';\nimport { v4 as uuidv4 } from 'uuid';\n\n\nconst Table = styled.table`\n\n    margin: 50px auto 50px 50px;\n    display: inline-block;\n    font-size: 1rem;\n    text-align: center;\n\n    `;\n\nexport default function CoinList(props) {\n\n    return (\n        <Table className=\"table table-hover table-sm table-striped table-dark table-border\">\n            <thead>\n                <tr>\n                    <th>Name</th>\n                    <th>Ticker</th>\n                    <th>Price</th>\n                    {props.showBalance ? <th>Balance</th> : null}\n                    <th>Actions</th>\n                </tr>\n\n            </thead>\n            <tbody>\n                {\n                    props.coinData.map(({ key, name, ticker, price, balance }) =>\n                        <Coin\n                            key={uuidv4()}\n                            handleRefresh={props.handleRefresh}\n                            handleTransaction={props.handleTransaction}\n                            name={name}\n                            ticker={ticker}\n                            showBalance={props.showBalance}\n                            balance={balance}\n                            price={price}\n                            tickerId={key}\n                        />)\n                }\n\n            </tbody>\n        </Table>\n    );\n\n}","export default __webpack_public_path__ + \"static/media/snowman.4ba2dff9.png\";","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport snowman from '../../snowman.png';\n\nconst Heady = styled.header`\n        background-color: #282c34;\n        min-height: 20vh;\n        display: flex;\n        flex-direction: row;\n        align-items: center;\n        justify-content: center;\n`;\n\nconst DIVAPP = styled.div`\n     text-align: center;\n     background-color: darkgrey;\n`;\nconst H1 = styled.h1`\n      font-size: 4rem;\n      color: white;\n`;\nconst Logo = styled.img`\n     height: 8rem;\n     pointer-events: none;\n\n`;\n\nconst Small = styled.div`\n    font-size: 1rem;\n    display: inline-block;\n`;\n\nexport default class Header extends Component {\n    render() {\n        return (\n            <DIVAPP>\n                <Heady>\n                    <Logo src={snowman} alt=\"logo\" />\n                    <H1 className=\"App-title\">\n                        Snowtrap DEX <Small>v2</Small>\n                    </H1>\n\n                </Heady>\n            </DIVAPP>\n        );\n    }\n} ","import AccountBalance from './components/AccountBalance/AccountBalance';\nimport React, { useState, useEffect } from 'react';\nimport CoinList from './components/CoinList/CoinList.jsx';\nimport Header from './components/Header/Header.jsx';\nimport axios from 'axios';\n\n//import 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootswatch/dist/lux/bootstrap.min.css';\nimport '@fortawesome/fontawesome-free/js/all';\n\n\nconst COIN_COUNT = 10;\nconst formatPrice = price => parseFloat(Number(price).toFixed(4));\n\nfunction App(props) {\n\n  const [balance, setBalance] = useState(20000);\n  const [showBalance, setShowBalance] = useState(false);\n  const [coinData, setCoinData] = useState([]);\n\n  const componentDidMount = async () => {\n    const response = await axios.get('https://api.coinpaprika.com/v1/coins')\n    const coinIds = response.data.slice(0, COIN_COUNT).map(coin => coin.id)\n    //retrieve the coin prices\n    const tickers = 'https://api.coinpaprika.com/v1/tickers/';\n    const promises = coinIds.map(id => axios.get(tickers + id));\n    const coinData = await Promise.all(promises);\n    const coinPriceData = coinData.map(response => {\n      const coin = response.data;\n      return {\n        key: coin.id,\n        name: coin.name,\n        ticker: coin.symbol,\n        balance: 0,\n        price: formatPrice(coin.quotes.USD.price),\n      };\n    });\n    setCoinData(coinPriceData);\n  };\n\n\n  useEffect(async () => {\n    if (coinData.length === 0) {\n      //component did mount\n      componentDidMount();\n    }\n  });\n\n  const handleBalanceVisability = (Event) => {\n    Event.preventDefault();\n    setShowBalance(oldValue => !oldValue);\n  }\n\n  const handleTransaction = (isBuy, valueChangedId) => {\n    var balanceChange = isBuy ? 1 : -1;\n    const newCoinData = coinData.map((values) => {\n      let newValues = { ...values };\n      if (valueChangedId == values.key) {\n\n        newValues.balance += balanceChange;\n        setBalance(oldBalance => oldBalance - balanceChange * newValues.price);\n\n      }\n      return newValues;\n    });\n    setCoinData(newCoinData);\n  };\n\n  const handleRefresh = async (valueChangedId) => {\n    const tickers = `https://api.coinpaprika.com/v1/tickers/${valueChangedId}`;\n    const response = await axios.get(tickers);\n    const newPriceAmount = formatPrice(response.data.quotes.USD.price);\n\n    const newCoinData = coinData.map(({ key, ticker, name, price, balance }) => {\n      let newPrice = price;\n      if (valueChangedId === key) {\n\n        newPrice = newPriceAmount;\n      }\n      return {\n        key,\n        ticker,\n        name,\n        price: newPrice,\n        balance\n      }\n    });\n\n\n    setCoinData(newCoinData);\n  }\n\n  const addHelicopterMoney = (Event) => {\n    Event.preventDefault();\n    setBalance(oldValue => oldValue + 1200);\n  }\n\n  return (\n    <>\n      <Header />\n      <AccountBalance\n        amount={balance}\n        showBalance={showBalance}\n        handleBalanceVisability={handleBalanceVisability}\n        addHelicopterMoney={addHelicopterMoney}\n      />\n      <CoinList\n        coinData={coinData}\n        showBalance={showBalance}\n        handleTransaction={handleTransaction}\n        handleRefresh={handleRefresh}\n      />\n    </>\n\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}